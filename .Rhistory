d <- read.csv("processed.cleveland.data")
colnames(d) <- c("age","sex","cp","trestbps","chol","fbs","restecg","thalach","exang","oldpeak", "slope", "ca", "thal","num")
head(d,10)
nrow(d)
ncol(d)
# d$diagnosed <- ifelse(df$income_class == "<=50K", "FALSE", "TRUE")
d <- d %>% add_column(diagnosed = (ifelse(d$num == 0, "FALSE", "TRUE")))
head(d,10)
age in colnames(d)
colnames(d).contains("age")
age %in% colnames(d)
"age" %in% colnames(d)
str(age)
string(age)
toString(age)
a <- age
>exist(f)
exist(f)
exists(f)
exists(d)
?exists
is.data.frame(d)
d[num]
d(num)
d$num
num %in% d
d$num
d$t
d$t == NULL
d$t.isnull()
is.null(d$t)
is.numeric(d$age)
print(max(d$age),min(d$age),mean(d$age))
print(max(d$age))
print(c(max(d$age),min(d$age),mean(d$age)))
print(summary(d$age))
print(summary(d$age)[1,3,4,6])
summary(d$age)[1]
summary(d$age)[1,2]
summary(d$age)-summary(d$age)[2]-summary(d$age)[5]
summary(d$age)[1:6]
print("mean is "+mean(d$age))
print("mean is ",mean(d$age))
cat("Current working dir: ", mean(d$age))
list_data <- list(c("Jan","Feb","Mar"), matrix(c(3,9,5,1,-2,8), nrow = 2),
list("green",12.3))
list_data
matrix(c("max","min","mean","median",max(d$age),min(d$age),mean(d$age),median(d$age)))
matrix(c("max","min","mean","median",max(d$age),min(d$age),mean(d$age),median(d$age)),nrow=2)
matrix(c("max",max(d$age),"min",min(d$age),"mean",mean(d$age),"median",median(d$age)),nrow=2)
m <- matrix(c("max",max(d$age),"min",min(d$age),"mean",mean(d$age),"median",median(d$age)),nrow=2)
print(m)
type(m)
types(d$age)
class(m)
class(d$age)
class(d$thal)
count(d$thal)
count(d$diagnosed)
?count
n_distinct(d$thal)
summary(de$thal)
summary(d$thal)
summary(d$diagnosed)
table(d$diagnosed)
summarize_column(d,diagnosed)
summarize_column <- function(df, column_name) {
if (!is.data.frame(df)||is.null(df$column_name)) {
stop("Invalid input(s): inputs must be a valid dataframe and given a valid column name")
}
this_d <- df$column_name
if(is.numeric(this_d)){
print("The values are numeric")
m <- matrix(c("max",max(this_d),"min",min(this_d),"mean",mean(this_d),"median",median(this_d)),nrow=2)
print(m)
} else{
print(class(this_d))
table(this_d)
}
}
summarize_column(d,diagnosed)
is.data.frame(d)
is.null(d$diagnosed)
summarize_column <- function(df, column_name) {
if (!is.data.frame(df)||is.null(df$column_name)) {
stop("Invalid input(s): inputs must be a valid dataframe and given a valid column name")
}
this_d <- df$column_name
if(is.numeric(this_d)){
print("The values are numeric")
m <- matrix(c("max",max(this_d),"min",min(this_d),"mean",mean(this_d),"median",median(this_d)),nrow=2)
print(m)
} else{
print(class(this_d))
table(this_d)
}
}
summarize_column(d,diagnosed)
summarize_column(d,num)
is.null(d$diagnosed)
summarize_column <- function(df, column_name) {
if (!is.data.frame(df)||is.null(df$column_name)) {
stop("Invalid input(s): inputs must be a valid dataframe and given a valid column name")
} else{
this_d <- df$column_name
if(is.numeric(this_d)){
print("The values are numeric")
m <- matrix(c("max",max(this_d),"min",min(this_d),"mean",mean(this_d),"median",median(this_d)),nrow=2)
print(m)
} else{
print(class(this_d))
table(this_d)
}
}
}
summarize_column(d,num)
is.data.frame(d)
!is.data.frame(d)
summarize_column <- function(data, column_name) {
if (!is.data.frame(data)||is.null(data$column_name)) {
stop("Invalid input(s): inputs must be a valid dataframe and given a valid column name")
}
this_d <- data$column_name
if(is.numeric(this_d)){
print("The values are numeric")
m <- matrix(c("max",max(this_d),"min",min(this_d),"mean",mean(this_d),"median",median(this_d)),nrow=2)
print(m)
} else{
print(class(this_d))
table(this_d)
}
}
summarize_column(d,num)
summarize_column <- function(data, column_name) {
this_d <- data$column_name
if(is.numeric(this_d)){
print("The values are numeric")
m <- matrix(c("max",max(this_d),"min",min(this_d),"mean",mean(this_d),"median",median(this_d)),nrow=2)
print(m)
} else{
print(class(this_d))
table(this_d)
}
}
summarize_column(d,num)
summarize_column <- function(data, column_name) {
if (!is.data.frame(data)||is.null(data$column_name)) {
stop("Invalid input(s): inputs must be a valid dataframe and given a valid column name")
}
this_d <- data$column_name
if(is.numeric(this_d)){
print("The values are numeric")
m <- matrix(c("max",max(this_d),"min",min(this_d),"mean",mean(this_d),"median",median(this_d)),nrow=2)
print(m)
} else{
print(class(this_d))
table(this_d)
}
}
summarize_column(d,"num")
a <- "num"
d$a
a <- num
summarize_column <- function(data, column_name) {
if (!is.data.frame(data)||is.null(data$column_name)) {
stop("Invalid input(s): inputs must be a valid dataframe and given a valid column name")
}
this_d <- data$column_name
if(is.numeric(this_d)){
print("The values are numeric")
m <- matrix(c("max",max(this_d),"min",min(this_d),"mean",mean(this_d),"median",median(this_d)),nrow=2)
print(m)
} else{
print(class(this_d))
table(this_d)
}
}
summarize_column(d,"num")
add_two_numbers <- function(a,b) {
if (!is.numeric(a) || !is.numeric(b)) {
stop("Invalid input(s): inputs must all be atomic numerical values.")
}
return(a+b)
}
add_two_numbers(c(1,2),2)
class("age")
"age" %in% colnames(d)
summarize_column <- function(data, column_name) {
if (!is.data.frame(data)||(column_name %in% colnames(d))) {
stop("Invalid input(s): inputs must be a valid dataframe and given a valid column name")
}
this_d <- data$column_name
if(is.numeric(this_d)){
print("The values are numeric")
m <- matrix(c("max",max(this_d),"min",min(this_d),"mean",mean(this_d),"median",median(this_d)),nrow=2)
print(m)
} else{
print(class(this_d))
table(this_d)
}
}
summarize_column <- function(data, column_name) {
if (!is.data.frame(data)||(column_name %in% colnames(d))) {
stop("Invalid input(s): inputs must be a valid dataframe and given a valid column name")
}
this_d <- data$column_name
if(is.numeric(this_d)){
print("The values are numeric")
m <- matrix(c("max",max(this_d),"min",min(this_d),"mean",mean(this_d),"median",median(this_d)),nrow=2)
print(m)
} else{
print(class(this_d))
table(this_d)
}
}
summarize_column <- function(data, column_name) {
if (!is.data.frame(data)||(column_name %in% colnames(d))) {
stop("Invalid input(s): inputs must be a valid dataframe and given a valid column name")
}
this_d <- data$column_name
if(is.numeric(this_d)){
print("The values are numeric")
m <- matrix(c("max",max(this_d),"min",min(this_d),"mean",mean(this_d),"median",median(this_d)),nrow=2)
print(m)
} else{
print(class(this_d))
table(this_d)
}
}
summarize_column(d,"num")
summarize_column <- function(data, column_name) {
if (!is.data.frame(data)||(column_name %in% colnames(d))) {
stop("Invalid input(s): inputs must be a valid dataframe and given a valid column name")
}
this_d <- data$column_name
if(is.numeric(this_d)){
print("The values are numeric")
m <- matrix(c("max",max(this_d),"min",min(this_d),"mean",mean(this_d),"median",median(this_d)),nrow=2)
print(m)
} else{
print(class(this_d))
table(this_d)
}
}
summarize_column(d,"num")
library(ggplot2)
library(tidyverse)
df <- read.csv("HW1_dataset.csv")
head(df,10)
nrow(df)
ncol(df)
df$check <- ifelse(df$income_class == "<=50K", "FALSE", "TRUE")
names(df)[10] <- ">=50K"
head(df,10)
# count of black, male and received more than 50K US dollars per year
count(df %>% filter(race == "Black") %>% filter(sex == "Male") %>% filter(income_class == ">50K"))
#count of white, female and received less than 50K US dollars per year
count(df %>% filter(race == "White") %>% filter(sex == "Female") %>% filter(income_class == "<=50K"))
ggplot(df, aes(x=education)) + geom_histogram(stat="count")
ggplot(df, aes(x=age, y=hours_per_week)) + geom_point()
# It appears that much fewer people are working as age goes up and most people in their working ages have a similar pattern of working around 25-50 hrs a week.
ggplot(df, aes(x=income_class, y=hours_per_week)) + geom_point() +geom_boxplot()
d <- read.csv("processed.cleveland.data")
colnames(d) <- c("age","sex","cp","trestbps","chol","fbs","restecg","thalach","exang","oldpeak", "slope", "ca", "thal","num")
head(d,10)
nrow(d)
ncol(d)
# d$diagnosed <- ifelse(df$income_class == "<=50K", "FALSE", "TRUE")
d <- d %>% add_column(diagnosed = (ifelse(d$num == 0, "FALSE", "TRUE")))
head(d,10)
add_two_numbers <- function(a,b) {
if (!is.numeric(a) || !is.numeric(b)) {
stop("Invalid input(s): inputs must all be atomic numerical values.")
}
return(a+b)
}
add_two_numbers(c(1,2),2)
summarize_column <- function(data, column_name) {
if (!is.data.frame(data)||(column_name %in% colnames(d))) {
stop("Invalid input(s): inputs must be a valid dataframe and given a valid column name")
}
this_d <- data$column_name
if(is.numeric(this_d)){
print("The values are numeric")
m <- matrix(c("max",max(this_d),"min",min(this_d),"mean",mean(this_d),"median",median(this_d)),nrow=2)
print(m)
} else{
print(class(this_d))
table(this_d)
}
}
summarize_column(d,"num")
summarize_column(d,num)
is.null(d$diagnosed)
!is.data.frame(d)||is.null(d$diagnosed)
summarize_column <- function(data, column_name) {
this_d <- data$column_name
if(is.numeric(this_d)){
print("The values are numeric")
m <- matrix(c("max",max(this_d),"min",min(this_d),"mean",mean(this_d),"median",median(this_d)),nrow=2)
print(m)
} else{
print(class(this_d))
table(this_d)
}
}
summarize_column(d,num)
summarize_column(d,age)
summarize_column <- function(data, column_name) {
this_d <- data$column_name
print(this_d)
if(is.numeric(this_d)){
print("The values are numeric")
m <- matrix(c("max",max(this_d),"min",min(this_d),"mean",mean(this_d),"median",median(this_d)),nrow=2)
print(m)
} else{
print(class(this_d))
table(this_d)
}
}
summarize_column(d,age)
a1 <- d$diagnosed
a1
d$"num"
summarize_column <- function(data, column_name) {
print(data)
print(column_name)
this_d <- data$column_name
print(this_d)
if(is.numeric(this_d)){
print("The values are numeric")
m <- matrix(c("max",max(this_d),"min",min(this_d),"mean",mean(this_d),"median",median(this_d)),nrow=2)
print(m)
} else{
print(class(this_d))
table(this_d)
}
}
summarize_column(d,age)
summarize_column(d,"age")
d[1]
d['age']
summarize_column <- function(data, column_name) {
print(data)
print(column_name)
this_d <- data[column_name]
print(this_d)
if(is.numeric(this_d)){
print("The values are numeric")
m <- matrix(c("max",max(this_d),"min",min(this_d),"mean",mean(this_d),"median",median(this_d)),nrow=2)
print(m)
} else{
print(class(this_d))
table(this_d)
}
}
summarize_column(d,"age")
summarize_column <- function(data, column_name) {
if (!is.data.frame(data) || is.null(data$colname)) {
stop("Invalid input(s): inputs must be a valid dataframe and given a valid column name")
}
this_d <- data[column_name]
print(this_d)
if(is.numeric(this_d)){
print("The values are numeric")
m <- matrix(c("max",max(this_d),"min",min(this_d),"mean",mean(this_d),"median",median(this_d)),nrow=2)
print(m)
} else{
print(class(this_d))
table(this_d)
}
}
summarize_column <- function(data, column_name) {
if (!is.data.frame(data) || is.null(data$colname)) {
stop("Invalid input(s): inputs must be a valid dataframe and given a valid column name")
}
this_d <- data[column_name]
print(this_d)
if(is.numeric(this_d)){
print("The values are numeric")
m <- matrix(c("max",max(this_d),"min",min(this_d),"mean",mean(this_d),"median",median(this_d)),nrow=2)
print(m)
} else{
print(class(this_d))
table(this_d)
}
}
summarize_column(d,"age")
summarize_column <- function(data, column_name) {
if (!is.data.frame(data) || is.null(data[column_name])) {
stop("Invalid input(s): inputs must be a valid dataframe and given a valid column name")
}
this_d <- data[column_name]
print(this_d)
if(is.numeric(this_d)){
print("The values are numeric")
m <- matrix(c("max",max(this_d),"min",min(this_d),"mean",mean(this_d),"median",median(this_d)),nrow=2)
print(m)
} else{
print(class(this_d))
table(this_d)
}
}
summarize_column(d,"age")
d[age]
d['age'][2]
d['age']
d['age'](1)
d[['age']]
d$age
summarize_column <- function(data, column_name) {
if (!is.data.frame(data) || is.null(data[column_name])) {
stop("Invalid input(s): inputs must be a valid dataframe and given a valid column name")
}
this_d <- data[[column_name]]
print(this_d)
if(is.numeric(this_d)){
print("The values are numeric")
m <- matrix(c("max",max(this_d),"min",min(this_d),"mean",mean(this_d),"median",median(this_d)),nrow=2)
print(m)
} else{
print(class(this_d))
table(this_d)
}
}
summarize_column(d,"age")
summarize_column <- function(data, column_name) {
if (!is.data.frame(data) || is.null(data[column_name])) {
stop("Invalid input(s): inputs must be a valid dataframe and given a valid column name")
}
this_d <- data[[column_name]]
if(is.numeric(this_d)){
print("The values are numeric")
m <- matrix(c("max",max(this_d),"min",min(this_d),"mean",mean(this_d),"median",median(this_d)),nrow=2)
print(m)
} else{
print(class(this_d))
table(this_d)
}
}
summarize_column(d,"age")
summarize_column(dat,"a")
summarize_column(d, "thal")
summarize_column <- function(data, column_name) {
if (!is.data.frame(data) || is.null(data[column_name])) {
stop("Invalid input(s): inputs must be a valid dataframe and given a valid column name")
}
this_d <- data[[column_name]]
if(is.numeric(this_d)){
print("The values are numeric")
m <- matrix(c("max",max(this_d),"min",min(this_d),"mean",mean(this_d),"median",median(this_d)),nrow=2)
print(m)
} else{
print(class(this_d))
table(this_d)
}
}
summarize_column(d,"age")
summarize_column(dat,"a")
summarize_column(d,"ca")
str(d)
d1 <- read.table("processed.cleveland.data")
d1 <- read.table("processed.cleveland.data",",")
d1 <- read.table("processed.cleveland.data", sep=",")
colnames(d1) <- c("age","sex","cp","trestbps","chol","fbs","restecg","thalach","exang","oldpeak", "slope", "ca", "thal","num")
head(d1,10)
nrow(d1)
ncol(d1)
d1 <- d1 %>% add_column(diagnosed = (ifelse(d1$num == 0, "FALSE", "TRUE")))
add_column(diagnosed = (ifelse(d1$num == 0, "FALSE", "TRUE")))
d1 <-mutate(d1, "diagnosed" = (num >= 1))
library(ggplot2)
library(tidyverse)
d1 <- d1 %>% add_column(diagnosed = (ifelse(d1$num == 0, "FALSE", "TRUE")))
head(d1,10)
summarize_column(d1,"ca")
str(d1)
d1 <-mutate(d1, "diagnosed" = (num >= 1))
str(d1)
d1 <- read.table("processed.cleveland.data", sep=",")
# Read and load the dataset
d <- read.table("processed.cleveland.data", sep=",")
# Label the column names
colnames(d) <- c("age","sex","cp","trestbps","chol","fbs","restecg","thalach","exang","oldpeak", "slope", "ca", "thal","num")
# show the first 10 lines of the dataset
head(d,10)
# print the number of rows
nrow(d)
# print the number of columns
ncol(d)
# Add a new column to the dataset called diagnosed
d <- d %>% add_column(diagnosed = (ifelse(d$num == 0, FALSE, TRUE)))
# Show the first 10 lines of the dataset
head(d,10)
# Build the function
summarize_column <- function(data, column_name) {
if (!is.data.frame(data) || is.null(data[column_name])) {
stop("Invalid input(s): inputs must be a valid dataframe and given a valid column name")
}
this_d <- data[[column_name]]
if(is.numeric(this_d)){
print("The values are numeric")
m <- matrix(c("max",max(this_d),"min",min(this_d),"mean",mean(this_d),"median",median(this_d)),nrow=2)
print(m)
} else{
print(class(this_d))
table(this_d)
}
}
summarize_column(d,"age")
summarize_column(dat,"a")
summarize_column(d,"ca")
